apiVersion: v1
kind: DeploymentConfig
metadata:
  name: ${NAME}
  namespace: ${PROJECT}
  labels:
    app: ${NAME}
  annotations:
    description: Defines how to deploy the application server
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
  triggers:
    - type: ImageChange
      imageChangeParams:
        containerNames:
          - nodejs-mongodb-example
        from:
          kind: ImageStreamTag
          namespace: main
          name: '${NAME}:dev'
    - type: ConfigChange
  replicas: 1
  test: false
  selector:
    name: ${NAME}
  template:
    metadata:
      name: ${NAME}
      creationTimestamp: null
      labels:
        name: ${NAME}
    spec:
      containers:
        - name: ${NAME}
          image: ' '
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/todos
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/v1/todos
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
status:
  observedGeneration: 1
  conditions:
    - type: Available
      status: 'False'
      lastTransitionTime: '2017-02-12T16:22:49Z'
      message: Deployment config does not have minimum availability.
